{"ast":null,"code":"var _jsxFileName = \"/Users/jessicaliu/Desktop/itinerary/src/Modal/MapWrapper.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { GoogleMap } from './GoogleMap';\nimport { SearchBox } from './SearchBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`;\n_c = Wrapper;\nexport const MapWrapper = () => {\n  _s();\n\n  const [zoom, setZoom] = useState(3);\n  const places = [];\n  let lat = 0;\n  let lng = 0;\n  const [center, setCenter] = useState({\n    lat,\n    lng\n  });\n\n  const onIdle = m => {\n    console.log('onIdle');\n    setZoom(m.getZoom());\n    setCenter(m.getCenter().toJSON());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(SearchBox, {\n          map: mapInstance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        defaultZoom: zoom,\n        defaultCenter: center,\n        yesIWantToUseGoogleMapApiInternals: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MapWrapper, \"a4vtBfqKcczXSe21xPnfYBUKigo=\");\n\n_c2 = MapWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"MapWrapper\");","map":{"version":3,"sources":["/Users/jessicaliu/Desktop/itinerary/src/Modal/MapWrapper.tsx"],"names":["React","useState","styled","GoogleMap","SearchBox","Wrapper","main","MapWrapper","zoom","setZoom","places","lat","lng","center","setCenter","onIdle","m","console","log","getZoom","getCenter","toJSON","mapInstance"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;;;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAACI,IAAK;AAC5B;AACA;AACA,CAHA;KAAMD,O;AAKN,OAAO,MAAME,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAMS,MAAwC,GAAG,EAAjD;AAEA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,GAAG,GAAG,CAAV;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAA4B;AAAEU,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAA5B,CAApC;;AAEA,QAAMG,MAAM,GAAIC,CAAD,IAAwB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAT,IAAAA,OAAO,CAACO,CAAC,CAACG,OAAF,EAAD,CAAP;AACAL,IAAAA,SAAS,CAACE,CAAC,CAACI,SAAF,GAAeC,MAAf,EAAD,CAAT;AACH,GAJD;;AAMA,sBACI;AAAA,2BACI,QAAC,OAAD;AAAA,8BACQ;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,GAAG,EAAEC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADR,eAKQ,QAAC,SAAD;AACI,QAAA,WAAW,EAAEd,IADjB;AAEI,QAAA,aAAa,EAAEK,MAFnB;AAGI,QAAA,kCAAkC;AAHtC;AAAA;AAAA;AAAA;AAAA,cALR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAwBH,CAvCM;;GAAMN,U;;MAAAA,U","sourcesContent":["\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { GoogleMap } from './GoogleMap';\nimport { SearchBox } from './SearchBox';\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MapWrapper = () => {\n    const [zoom, setZoom] = useState(3);\n    const places: google.maps.places.PlaceResult[] = [];\n\n    let lat = 0;\n    let lng = 0;\n\n    const [center, setCenter] = useState<google.maps.LatLngLiteral>({ lat, lng });\n\n    const onIdle = (m: google.maps.Map) => {\n        console.log('onIdle');\n        setZoom(m.getZoom()!);\n        setCenter(m.getCenter()!.toJSON());\n    }\n\n    return (\n        <>\n            <Wrapper>\n                    <div>\n                        <SearchBox map={mapInstance} />\n                    </div>\n\n                    <GoogleMap\n                        defaultZoom={zoom}\n                        defaultCenter={center}\n                        yesIWantToUseGoogleMapApiInternals\n                    >\n                        {/* {places.map((place) => (\n                            <Marker\n                                key={place.id}\n                                text={place.name}\n                                lat={place.geometry.location.lat}\n                                lng={place.geometry.location.lng}\n                            />\n                        ))} */}\n                    </GoogleMap>\n            </Wrapper>\n        </>\n    )\n};"]},"metadata":{},"sourceType":"module"}