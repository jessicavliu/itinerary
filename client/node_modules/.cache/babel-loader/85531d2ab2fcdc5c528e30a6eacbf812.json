{"ast":null,"code":"var _jsxFileName = \"/Users/jessicaliu/Desktop/itinerary/src/Modal/AddLocationModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GoogleMap } from './GoogleMap';\nimport { Marker } from './Marker';\nimport '../styles/modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddLocationModal = _ref => {\n  _s();\n\n  let {\n    show,\n    handleClose\n  } = _ref;\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n  const [zoom, setZoom] = useState(3);\n  let lat = 0;\n  let lng = 0;\n  const [center, setCenter] = useState({\n    lat,\n    lng\n  });\n\n  const onIdle = m => {\n    console.log('onIdle');\n    setZoom(m.getZoom());\n    setCenter(m.getCenter().toJSON());\n  };\n\n  const handleAddLocationToItinerary = () => {\n    // update location db to have associated itinerary\n    console.log('added location to itinerary');\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: showHideClassName,\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"modal-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n          defaultZoom: 10,\n          defaultCenter: LOS_ANGELES_CENTER,\n          yesIWantToUseGoogleMapApiInternals: true,\n          onGoogleApiLoaded: _ref2 => {\n            let {\n              map,\n              maps\n            } = _ref2;\n            return apiIsLoaded(map, maps, places);\n          },\n          children: places.map(place => /*#__PURE__*/_jsxDEV(Marker, {\n            text: place.name,\n            lat: place.geometry.location.lat,\n            lng: place.geometry.location.lng\n          }, place.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add to itineraries: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"itinerary 1\",\n            children: \"Itinerary 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddLocationToItinerary,\n        children: \"Add location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddLocationModal, \"a4vtBfqKcczXSe21xPnfYBUKigo=\");\n\n_c = AddLocationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLocationModal\");","map":{"version":3,"sources":["/Users/jessicaliu/Desktop/itinerary/src/Modal/AddLocationModal.tsx"],"names":["React","useState","GoogleMap","Marker","AddLocationModal","show","handleClose","showHideClassName","zoom","setZoom","lat","lng","center","setCenter","onIdle","m","console","log","getZoom","getCenter","toJSON","handleAddLocationToItinerary","LOS_ANGELES_CENTER","map","maps","apiIsLoaded","places","place","name","geometry","location","id"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,qBAAP;;AAOA,OAAO,MAAMC,gBAAgB,GAAG,QAAkD;AAAA;;AAAA,MAAjD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAiD;AAC9E,QAAMC,iBAAiB,GAAGF,IAAI,GAAG,qBAAH,GAA2B,oBAAzD;AAEA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AAEA,MAAIS,GAAG,GAAG,CAAV;AACA,MAAIC,GAAG,GAAG,CAAV;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAA4B;AAAES,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAA5B,CAApC;;AAEA,QAAMG,MAAM,GAAIC,CAAD,IAAwB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAR,IAAAA,OAAO,CAACM,CAAC,CAACG,OAAF,EAAD,CAAP;AACAL,IAAAA,SAAS,CAACE,CAAC,CAACI,SAAF,GAAeC,MAAf,EAAD,CAAT;AACH,GAJD;;AAMA,QAAMC,4BAA4B,GAAG,MAAM;AACvC;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AAEAX,IAAAA,WAAW;AACd,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAEC,iBAAhB;AAAA,2BACI;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAED,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,WAAW,EAAE,EADjB;AAEI,UAAA,aAAa,EAAEgB,kBAFnB;AAGI,UAAA,kCAAkC,MAHtC;AAII,UAAA,iBAAiB,EAAE;AAAA,gBAAC;AAAEC,cAAAA,GAAF;AAAOC,cAAAA;AAAP,aAAD;AAAA,mBAAmBC,WAAW,CAACF,GAAD,EAAMC,IAAN,EAAYE,MAAZ,CAA9B;AAAA,WAJvB;AAAA,oBAMKA,MAAM,CAACH,GAAP,CAAYI,KAAD,iBACR,QAAC,MAAD;AAEI,YAAA,IAAI,EAAEA,KAAK,CAACC,IAFhB;AAGI,YAAA,GAAG,EAAED,KAAK,CAACE,QAAN,CAAeC,QAAf,CAAwBpB,GAHjC;AAII,YAAA,GAAG,EAAEiB,KAAK,CAACE,QAAN,CAAeC,QAAf,CAAwBnB;AAJjC,aACSgB,KAAK,CAACI,EADf;AAAA;AAAA;AAAA;AAAA,kBADH;AANL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eAkBI;AAAA,iCACI;AAAQ,YAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eA0BI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEV,4BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CAzDM;;GAAMjB,gB;;KAAAA,gB","sourcesContent":["import { Wrapper } from '@googlemaps/react-wrapper';\nimport React, { useState } from 'react';\n\nimport { GoogleMap } from './GoogleMap';\nimport { Marker } from './Marker';\nimport '../styles/modal.css';\n\ninterface AddLocationModalProps {\n    show: boolean;\n    handleClose: () => void;\n}\n\nexport const AddLocationModal = ({ show, handleClose }: AddLocationModalProps) => {\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n\n    const [zoom, setZoom] = useState(3);\n\n    let lat = 0;\n    let lng = 0;\n\n    const [center, setCenter] = useState<google.maps.LatLngLiteral>({ lat, lng });\n\n    const onIdle = (m: google.maps.Map) => {\n        console.log('onIdle');\n        setZoom(m.getZoom()!);\n        setCenter(m.getCenter()!.toJSON());\n    }\n\n    const handleAddLocationToItinerary = () => {\n        // update location db to have associated itinerary\n        console.log('added location to itinerary')\n\n        handleClose();\n    };\n\n    return (\n        <div className={showHideClassName}>\n            <section className=\"modal-main\">\n                <button type=\"button\" onClick={handleClose}>\n                    Close\n                </button>\n                <div>\n                    <GoogleMap\n                        defaultZoom={10}\n                        defaultCenter={LOS_ANGELES_CENTER}\n                        yesIWantToUseGoogleMapApiInternals\n                        onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps, places)}\n                    >\n                        {places.map((place) => (\n                            <Marker\n                                key={place.id}\n                                text={place.name}\n                                lat={place.geometry.location.lat}\n                                lng={place.geometry.location.lng}\n                            />\n                        ))}\n                    </GoogleMap>\n\n                    <span>Add to itineraries: </span>\n                    <select>\n                        <option value=\"itinerary 1\">Itinerary 1</option>\n                    </select>\n                </div>\n                <button type=\"button\" onClick={handleAddLocationToItinerary}>\n                    Add location\n                </button>\n            </section>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}